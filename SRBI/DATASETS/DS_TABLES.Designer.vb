'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DS_TABLES"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DS_TABLES
    Inherits Global.System.Data.DataSet
    
    Private tableSPM4_PDS_LIST As SPM4_PDS_LISTDataTable
    
    Private tabletblV1_USERACCOUNT As tblV1_USERACCOUNTDataTable
    
    Private tabletblV1_USERACCOUNTLOGS As tblV1_USERACCOUNTLOGSDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SPM4_PDS_LIST")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_PDS_LISTDataTable(ds.Tables("SPM4_PDS_LIST")))
            End If
            If (Not (ds.Tables("tblV1_USERACCOUNT")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_USERACCOUNTDataTable(ds.Tables("tblV1_USERACCOUNT")))
            End If
            If (Not (ds.Tables("tblV1_USERACCOUNTLOGS")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_USERACCOUNTLOGSDataTable(ds.Tables("tblV1_USERACCOUNTLOGS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SPM4_PDS_LIST() As SPM4_PDS_LISTDataTable
        Get
            Return Me.tableSPM4_PDS_LIST
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblV1_USERACCOUNT() As tblV1_USERACCOUNTDataTable
        Get
            Return Me.tabletblV1_USERACCOUNT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblV1_USERACCOUNTLOGS() As tblV1_USERACCOUNTLOGSDataTable
        Get
            Return Me.tabletblV1_USERACCOUNTLOGS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DS_TABLES = CType(MyBase.Clone,DS_TABLES)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("SPM4_PDS_LIST")) Is Nothing) Then
                MyBase.Tables.Add(New SPM4_PDS_LISTDataTable(ds.Tables("SPM4_PDS_LIST")))
            End If
            If (Not (ds.Tables("tblV1_USERACCOUNT")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_USERACCOUNTDataTable(ds.Tables("tblV1_USERACCOUNT")))
            End If
            If (Not (ds.Tables("tblV1_USERACCOUNTLOGS")) Is Nothing) Then
                MyBase.Tables.Add(New tblV1_USERACCOUNTLOGSDataTable(ds.Tables("tblV1_USERACCOUNTLOGS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSPM4_PDS_LIST = CType(MyBase.Tables("SPM4_PDS_LIST"),SPM4_PDS_LISTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSPM4_PDS_LIST) Is Nothing) Then
                Me.tableSPM4_PDS_LIST.InitVars
            End If
        End If
        Me.tabletblV1_USERACCOUNT = CType(MyBase.Tables("tblV1_USERACCOUNT"),tblV1_USERACCOUNTDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblV1_USERACCOUNT) Is Nothing) Then
                Me.tabletblV1_USERACCOUNT.InitVars
            End If
        End If
        Me.tabletblV1_USERACCOUNTLOGS = CType(MyBase.Tables("tblV1_USERACCOUNTLOGS"),tblV1_USERACCOUNTLOGSDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblV1_USERACCOUNTLOGS) Is Nothing) Then
                Me.tabletblV1_USERACCOUNTLOGS.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DS_TABLES"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DS_TABLES.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSPM4_PDS_LIST = New SPM4_PDS_LISTDataTable()
        MyBase.Tables.Add(Me.tableSPM4_PDS_LIST)
        Me.tabletblV1_USERACCOUNT = New tblV1_USERACCOUNTDataTable()
        MyBase.Tables.Add(Me.tabletblV1_USERACCOUNT)
        Me.tabletblV1_USERACCOUNTLOGS = New tblV1_USERACCOUNTLOGSDataTable()
        MyBase.Tables.Add(Me.tabletblV1_USERACCOUNTLOGS)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeSPM4_PDS_LIST() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblV1_USERACCOUNT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializetblV1_USERACCOUNTLOGS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DS_TABLES = New DS_TABLES()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub SPM4_PDS_LISTRowChangeEventHandler(ByVal sender As Object, ByVal e As SPM4_PDS_LISTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblV1_USERACCOUNTRowChangeEventHandler(ByVal sender As Object, ByVal e As tblV1_USERACCOUNTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub tblV1_USERACCOUNTLOGSRowChangeEventHandler(ByVal sender As Object, ByVal e As tblV1_USERACCOUNTLOGSRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SPM4_PDS_LISTDataTable
        Inherits Global.System.Data.TypedTableBase(Of SPM4_PDS_LISTRow)
        
        Private columnFULLNAME As Global.System.Data.DataColumn
        
        Private columnEMP_ID As Global.System.Data.DataColumn
        
        Private columnEMP_LNAME As Global.System.Data.DataColumn
        
        Private columnEMP_FNAME As Global.System.Data.DataColumn
        
        Private columnEMP_MNAME As Global.System.Data.DataColumn
        
        Private columnEMP_DOB As Global.System.Data.DataColumn
        
        Private columnEMP_POB As Global.System.Data.DataColumn
        
        Private columnEMP_ISMALE As Global.System.Data.DataColumn
        
        Private columnEMP_CS As Global.System.Data.DataColumn
        
        Private columnEMP_HT As Global.System.Data.DataColumn
        
        Private columnEMP_WT As Global.System.Data.DataColumn
        
        Private columnEMP_BT As Global.System.Data.DataColumn
        
        Private columnEMPGSIS As Global.System.Data.DataColumn
        
        Private columnEMP_PAGIBIG As Global.System.Data.DataColumn
        
        Private columnEMP_PHEALTH As Global.System.Data.DataColumn
        
        Private columnEMP_SSS As Global.System.Data.DataColumn
        
        Private columnEMP_TIN As Global.System.Data.DataColumn
        
        Private columnEMP_AGENCYNUM As Global.System.Data.DataColumn
        
        Private columnEMP_TELNUM As Global.System.Data.DataColumn
        
        Private columnEMP_MOBNUM As Global.System.Data.DataColumn
        
        Private columnEMP_EMAILADD As Global.System.Data.DataColumn
        
        Private columnEMP_FTHRLNAME As Global.System.Data.DataColumn
        
        Private columnEMP_FTHRFNAME As Global.System.Data.DataColumn
        
        Private columnEMP_FTHRMNAME As Global.System.Data.DataColumn
        
        Private columnEMP_FTHRNAMEEXT As Global.System.Data.DataColumn
        
        Private columnEMP_MTHRLNAME As Global.System.Data.DataColumn
        
        Private columnEMP_MTHRFNAME As Global.System.Data.DataColumn
        
        Private columnEMP_MTHRMNAME As Global.System.Data.DataColumn
        
        Private columnEMP_GOVTISSUEDID As Global.System.Data.DataColumn
        
        Private columnEMP_GOVTIDNO As Global.System.Data.DataColumn
        
        Private columnEMP_GOVTDATEISSUED As Global.System.Data.DataColumn
        
        Private columnEMP_GOVTPLACEISSUED As Global.System.Data.DataColumn
        
        Private columnEMP_PHOTO As Global.System.Data.DataColumn
        
        Private columnEMP_SIGNATURE As Global.System.Data.DataColumn
        
        Private columnEMP_DATEACCOM As Global.System.Data.DataColumn
        
        Private columnEMP_RTHUMB As Global.System.Data.DataColumn
        
        Private columnEMP_EMP_SSWORNDATE As Global.System.Data.DataColumn
        
        Private columnEMP_ADAOTH As Global.System.Data.DataColumn
        
        Private columnEMP_NAMEEXT As Global.System.Data.DataColumn
        
        Private columnEMP_NAMETITLE As Global.System.Data.DataColumn
        
        Private columnEMP_MTHRMAIDENNAME As Global.System.Data.DataColumn
        
        Private columnEMP_SRVSTAT As Global.System.Data.DataColumn
        
        Private columnEMP_SRVSTATDATE As Global.System.Data.DataColumn
        
        Private columnEMP_DATEENC As Global.System.Data.DataColumn
        
        Private columnHDIVS_CODE As Global.System.Data.DataColumn
        
        Private columnEMP_PHOTO_ID As Global.System.Data.DataColumn
        
        Private columnEMP_PHOTO_SIGN As Global.System.Data.DataColumn
        
        Private columnEMP_POSITION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SPM4_PDS_LIST"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FULLNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFULLNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_LNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_LNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_FNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_FNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_MNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_MNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_DOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_DOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_POBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_POB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_ISMALEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_ISMALE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_CSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_CS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_HTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_HT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_WTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_WT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_BTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_BT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMPGSISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPGSIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_PAGIBIGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_PAGIBIG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_PHEALTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_PHEALTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_SSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_SSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_TINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_TIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_AGENCYNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_AGENCYNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_TELNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_TELNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_MOBNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_MOBNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_EMAILADDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_EMAILADD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_FTHRLNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_FTHRLNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_FTHRFNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_FTHRFNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_FTHRMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_FTHRMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_FTHRNAMEEXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_FTHRNAMEEXT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_MTHRLNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_MTHRLNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_MTHRFNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_MTHRFNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_MTHRMNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_MTHRMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_GOVTISSUEDIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_GOVTISSUEDID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_GOVTIDNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_GOVTIDNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_GOVTDATEISSUEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_GOVTDATEISSUED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_GOVTPLACEISSUEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_GOVTPLACEISSUED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_PHOTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_PHOTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_SIGNATUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_SIGNATURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_DATEACCOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_DATEACCOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_RTHUMBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_RTHUMB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_EMP_SSWORNDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_EMP_SSWORNDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_ADAOTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_ADAOTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_NAMEEXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_NAMEEXT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_NAMETITLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_NAMETITLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_MTHRMAIDENNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_MTHRMAIDENNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_SRVSTATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_SRVSTAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_SRVSTATDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_SRVSTATDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_DATEENCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_DATEENC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HDIVS_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHDIVS_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_PHOTO_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_PHOTO_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_PHOTO_SIGNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_PHOTO_SIGN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_POSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_POSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SPM4_PDS_LISTRow
            Get
                Return CType(Me.Rows(index),SPM4_PDS_LISTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PDS_LISTRowChanging As SPM4_PDS_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PDS_LISTRowChanged As SPM4_PDS_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PDS_LISTRowDeleting As SPM4_PDS_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SPM4_PDS_LISTRowDeleted As SPM4_PDS_LISTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddSPM4_PDS_LISTRow(ByVal row As SPM4_PDS_LISTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddSPM4_PDS_LISTRow( _
                    ByVal FULLNAME As String,  _
                    ByVal EMP_ID As String,  _
                    ByVal EMP_LNAME As String,  _
                    ByVal EMP_FNAME As String,  _
                    ByVal EMP_MNAME As String,  _
                    ByVal EMP_DOB As Date,  _
                    ByVal EMP_POB As String,  _
                    ByVal EMP_ISMALE As Boolean,  _
                    ByVal EMP_CS As String,  _
                    ByVal EMP_HT As String,  _
                    ByVal EMP_WT As String,  _
                    ByVal EMP_BT As String,  _
                    ByVal EMPGSIS As String,  _
                    ByVal EMP_PAGIBIG As String,  _
                    ByVal EMP_PHEALTH As String,  _
                    ByVal EMP_SSS As String,  _
                    ByVal EMP_TIN As String,  _
                    ByVal EMP_AGENCYNUM As String,  _
                    ByVal EMP_TELNUM As String,  _
                    ByVal EMP_MOBNUM As String,  _
                    ByVal EMP_EMAILADD As String,  _
                    ByVal EMP_FTHRLNAME As String,  _
                    ByVal EMP_FTHRFNAME As String,  _
                    ByVal EMP_FTHRMNAME As String,  _
                    ByVal EMP_FTHRNAMEEXT As String,  _
                    ByVal EMP_MTHRLNAME As String,  _
                    ByVal EMP_MTHRFNAME As String,  _
                    ByVal EMP_MTHRMNAME As String,  _
                    ByVal EMP_GOVTISSUEDID As String,  _
                    ByVal EMP_GOVTIDNO As String,  _
                    ByVal EMP_GOVTDATEISSUED As Date,  _
                    ByVal EMP_GOVTPLACEISSUED As String,  _
                    ByVal EMP_PHOTO() As Byte,  _
                    ByVal EMP_SIGNATURE() As Byte,  _
                    ByVal EMP_DATEACCOM As Date,  _
                    ByVal EMP_RTHUMB() As Byte,  _
                    ByVal EMP_EMP_SSWORNDATE As Date,  _
                    ByVal EMP_ADAOTH As Boolean,  _
                    ByVal EMP_NAMEEXT As String,  _
                    ByVal EMP_NAMETITLE As String,  _
                    ByVal EMP_MTHRMAIDENNAME As String,  _
                    ByVal EMP_SRVSTAT As Boolean,  _
                    ByVal EMP_SRVSTATDATE As Date,  _
                    ByVal EMP_DATEENC As Date,  _
                    ByVal HDIVS_CODE As String,  _
                    ByVal EMP_PHOTO_ID As String,  _
                    ByVal EMP_PHOTO_SIGN As String,  _
                    ByVal EMP_POSITION As String) As SPM4_PDS_LISTRow
            Dim rowSPM4_PDS_LISTRow As SPM4_PDS_LISTRow = CType(Me.NewRow,SPM4_PDS_LISTRow)
            Dim columnValuesArray() As Object = New Object() {FULLNAME, EMP_ID, EMP_LNAME, EMP_FNAME, EMP_MNAME, EMP_DOB, EMP_POB, EMP_ISMALE, EMP_CS, EMP_HT, EMP_WT, EMP_BT, EMPGSIS, EMP_PAGIBIG, EMP_PHEALTH, EMP_SSS, EMP_TIN, EMP_AGENCYNUM, EMP_TELNUM, EMP_MOBNUM, EMP_EMAILADD, EMP_FTHRLNAME, EMP_FTHRFNAME, EMP_FTHRMNAME, EMP_FTHRNAMEEXT, EMP_MTHRLNAME, EMP_MTHRFNAME, EMP_MTHRMNAME, EMP_GOVTISSUEDID, EMP_GOVTIDNO, EMP_GOVTDATEISSUED, EMP_GOVTPLACEISSUED, EMP_PHOTO, EMP_SIGNATURE, EMP_DATEACCOM, EMP_RTHUMB, EMP_EMP_SSWORNDATE, EMP_ADAOTH, EMP_NAMEEXT, EMP_NAMETITLE, EMP_MTHRMAIDENNAME, EMP_SRVSTAT, EMP_SRVSTATDATE, EMP_DATEENC, HDIVS_CODE, EMP_PHOTO_ID, EMP_PHOTO_SIGN, EMP_POSITION}
            rowSPM4_PDS_LISTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSPM4_PDS_LISTRow)
            Return rowSPM4_PDS_LISTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByEMP_ID(ByVal EMP_ID As String) As SPM4_PDS_LISTRow
            Return CType(Me.Rows.Find(New Object() {EMP_ID}),SPM4_PDS_LISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SPM4_PDS_LISTDataTable = CType(MyBase.Clone,SPM4_PDS_LISTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SPM4_PDS_LISTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFULLNAME = MyBase.Columns("FULLNAME")
            Me.columnEMP_ID = MyBase.Columns("EMP_ID")
            Me.columnEMP_LNAME = MyBase.Columns("EMP_LNAME")
            Me.columnEMP_FNAME = MyBase.Columns("EMP_FNAME")
            Me.columnEMP_MNAME = MyBase.Columns("EMP_MNAME")
            Me.columnEMP_DOB = MyBase.Columns("EMP_DOB")
            Me.columnEMP_POB = MyBase.Columns("EMP_POB")
            Me.columnEMP_ISMALE = MyBase.Columns("EMP_ISMALE")
            Me.columnEMP_CS = MyBase.Columns("EMP_CS")
            Me.columnEMP_HT = MyBase.Columns("EMP_HT")
            Me.columnEMP_WT = MyBase.Columns("EMP_WT")
            Me.columnEMP_BT = MyBase.Columns("EMP_BT")
            Me.columnEMPGSIS = MyBase.Columns("EMPGSIS")
            Me.columnEMP_PAGIBIG = MyBase.Columns("EMP_PAGIBIG")
            Me.columnEMP_PHEALTH = MyBase.Columns("EMP_PHEALTH")
            Me.columnEMP_SSS = MyBase.Columns("EMP_SSS")
            Me.columnEMP_TIN = MyBase.Columns("EMP_TIN")
            Me.columnEMP_AGENCYNUM = MyBase.Columns("EMP_AGENCYNUM")
            Me.columnEMP_TELNUM = MyBase.Columns("EMP_TELNUM")
            Me.columnEMP_MOBNUM = MyBase.Columns("EMP_MOBNUM")
            Me.columnEMP_EMAILADD = MyBase.Columns("EMP_EMAILADD")
            Me.columnEMP_FTHRLNAME = MyBase.Columns("EMP_FTHRLNAME")
            Me.columnEMP_FTHRFNAME = MyBase.Columns("EMP_FTHRFNAME")
            Me.columnEMP_FTHRMNAME = MyBase.Columns("EMP_FTHRMNAME")
            Me.columnEMP_FTHRNAMEEXT = MyBase.Columns("EMP_FTHRNAMEEXT")
            Me.columnEMP_MTHRLNAME = MyBase.Columns("EMP_MTHRLNAME")
            Me.columnEMP_MTHRFNAME = MyBase.Columns("EMP_MTHRFNAME")
            Me.columnEMP_MTHRMNAME = MyBase.Columns("EMP_MTHRMNAME")
            Me.columnEMP_GOVTISSUEDID = MyBase.Columns("EMP_GOVTISSUEDID")
            Me.columnEMP_GOVTIDNO = MyBase.Columns("EMP_GOVTIDNO")
            Me.columnEMP_GOVTDATEISSUED = MyBase.Columns("EMP_GOVTDATEISSUED")
            Me.columnEMP_GOVTPLACEISSUED = MyBase.Columns("EMP_GOVTPLACEISSUED")
            Me.columnEMP_PHOTO = MyBase.Columns("EMP_PHOTO")
            Me.columnEMP_SIGNATURE = MyBase.Columns("EMP_SIGNATURE")
            Me.columnEMP_DATEACCOM = MyBase.Columns("EMP_DATEACCOM")
            Me.columnEMP_RTHUMB = MyBase.Columns("EMP_RTHUMB")
            Me.columnEMP_EMP_SSWORNDATE = MyBase.Columns("EMP_EMP_SSWORNDATE")
            Me.columnEMP_ADAOTH = MyBase.Columns("EMP_ADAOTH")
            Me.columnEMP_NAMEEXT = MyBase.Columns("EMP_NAMEEXT")
            Me.columnEMP_NAMETITLE = MyBase.Columns("EMP_NAMETITLE")
            Me.columnEMP_MTHRMAIDENNAME = MyBase.Columns("EMP_MTHRMAIDENNAME")
            Me.columnEMP_SRVSTAT = MyBase.Columns("EMP_SRVSTAT")
            Me.columnEMP_SRVSTATDATE = MyBase.Columns("EMP_SRVSTATDATE")
            Me.columnEMP_DATEENC = MyBase.Columns("EMP_DATEENC")
            Me.columnHDIVS_CODE = MyBase.Columns("HDIVS_CODE")
            Me.columnEMP_PHOTO_ID = MyBase.Columns("EMP_PHOTO_ID")
            Me.columnEMP_PHOTO_SIGN = MyBase.Columns("EMP_PHOTO_SIGN")
            Me.columnEMP_POSITION = MyBase.Columns("EMP_POSITION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFULLNAME = New Global.System.Data.DataColumn("FULLNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFULLNAME)
            Me.columnEMP_ID = New Global.System.Data.DataColumn("EMP_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_ID)
            Me.columnEMP_LNAME = New Global.System.Data.DataColumn("EMP_LNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_LNAME)
            Me.columnEMP_FNAME = New Global.System.Data.DataColumn("EMP_FNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_FNAME)
            Me.columnEMP_MNAME = New Global.System.Data.DataColumn("EMP_MNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_MNAME)
            Me.columnEMP_DOB = New Global.System.Data.DataColumn("EMP_DOB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_DOB)
            Me.columnEMP_POB = New Global.System.Data.DataColumn("EMP_POB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_POB)
            Me.columnEMP_ISMALE = New Global.System.Data.DataColumn("EMP_ISMALE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_ISMALE)
            Me.columnEMP_CS = New Global.System.Data.DataColumn("EMP_CS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_CS)
            Me.columnEMP_HT = New Global.System.Data.DataColumn("EMP_HT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_HT)
            Me.columnEMP_WT = New Global.System.Data.DataColumn("EMP_WT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_WT)
            Me.columnEMP_BT = New Global.System.Data.DataColumn("EMP_BT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_BT)
            Me.columnEMPGSIS = New Global.System.Data.DataColumn("EMPGSIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPGSIS)
            Me.columnEMP_PAGIBIG = New Global.System.Data.DataColumn("EMP_PAGIBIG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_PAGIBIG)
            Me.columnEMP_PHEALTH = New Global.System.Data.DataColumn("EMP_PHEALTH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_PHEALTH)
            Me.columnEMP_SSS = New Global.System.Data.DataColumn("EMP_SSS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_SSS)
            Me.columnEMP_TIN = New Global.System.Data.DataColumn("EMP_TIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_TIN)
            Me.columnEMP_AGENCYNUM = New Global.System.Data.DataColumn("EMP_AGENCYNUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_AGENCYNUM)
            Me.columnEMP_TELNUM = New Global.System.Data.DataColumn("EMP_TELNUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_TELNUM)
            Me.columnEMP_MOBNUM = New Global.System.Data.DataColumn("EMP_MOBNUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_MOBNUM)
            Me.columnEMP_EMAILADD = New Global.System.Data.DataColumn("EMP_EMAILADD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_EMAILADD)
            Me.columnEMP_FTHRLNAME = New Global.System.Data.DataColumn("EMP_FTHRLNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_FTHRLNAME)
            Me.columnEMP_FTHRFNAME = New Global.System.Data.DataColumn("EMP_FTHRFNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_FTHRFNAME)
            Me.columnEMP_FTHRMNAME = New Global.System.Data.DataColumn("EMP_FTHRMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_FTHRMNAME)
            Me.columnEMP_FTHRNAMEEXT = New Global.System.Data.DataColumn("EMP_FTHRNAMEEXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_FTHRNAMEEXT)
            Me.columnEMP_MTHRLNAME = New Global.System.Data.DataColumn("EMP_MTHRLNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_MTHRLNAME)
            Me.columnEMP_MTHRFNAME = New Global.System.Data.DataColumn("EMP_MTHRFNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_MTHRFNAME)
            Me.columnEMP_MTHRMNAME = New Global.System.Data.DataColumn("EMP_MTHRMNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_MTHRMNAME)
            Me.columnEMP_GOVTISSUEDID = New Global.System.Data.DataColumn("EMP_GOVTISSUEDID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_GOVTISSUEDID)
            Me.columnEMP_GOVTIDNO = New Global.System.Data.DataColumn("EMP_GOVTIDNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_GOVTIDNO)
            Me.columnEMP_GOVTDATEISSUED = New Global.System.Data.DataColumn("EMP_GOVTDATEISSUED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_GOVTDATEISSUED)
            Me.columnEMP_GOVTPLACEISSUED = New Global.System.Data.DataColumn("EMP_GOVTPLACEISSUED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_GOVTPLACEISSUED)
            Me.columnEMP_PHOTO = New Global.System.Data.DataColumn("EMP_PHOTO", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_PHOTO)
            Me.columnEMP_SIGNATURE = New Global.System.Data.DataColumn("EMP_SIGNATURE", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_SIGNATURE)
            Me.columnEMP_DATEACCOM = New Global.System.Data.DataColumn("EMP_DATEACCOM", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_DATEACCOM)
            Me.columnEMP_RTHUMB = New Global.System.Data.DataColumn("EMP_RTHUMB", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_RTHUMB)
            Me.columnEMP_EMP_SSWORNDATE = New Global.System.Data.DataColumn("EMP_EMP_SSWORNDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_EMP_SSWORNDATE)
            Me.columnEMP_ADAOTH = New Global.System.Data.DataColumn("EMP_ADAOTH", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_ADAOTH)
            Me.columnEMP_NAMEEXT = New Global.System.Data.DataColumn("EMP_NAMEEXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_NAMEEXT)
            Me.columnEMP_NAMETITLE = New Global.System.Data.DataColumn("EMP_NAMETITLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_NAMETITLE)
            Me.columnEMP_MTHRMAIDENNAME = New Global.System.Data.DataColumn("EMP_MTHRMAIDENNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_MTHRMAIDENNAME)
            Me.columnEMP_SRVSTAT = New Global.System.Data.DataColumn("EMP_SRVSTAT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_SRVSTAT)
            Me.columnEMP_SRVSTATDATE = New Global.System.Data.DataColumn("EMP_SRVSTATDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_SRVSTATDATE)
            Me.columnEMP_DATEENC = New Global.System.Data.DataColumn("EMP_DATEENC", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_DATEENC)
            Me.columnHDIVS_CODE = New Global.System.Data.DataColumn("HDIVS_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHDIVS_CODE)
            Me.columnEMP_PHOTO_ID = New Global.System.Data.DataColumn("EMP_PHOTO_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_PHOTO_ID)
            Me.columnEMP_PHOTO_SIGN = New Global.System.Data.DataColumn("EMP_PHOTO_SIGN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_PHOTO_SIGN)
            Me.columnEMP_POSITION = New Global.System.Data.DataColumn("EMP_POSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_POSITION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEMP_ID}, true))
            Me.columnFULLNAME.ReadOnly = true
            Me.columnFULLNAME.MaxLength = 1000
            Me.columnEMP_ID.AllowDBNull = false
            Me.columnEMP_ID.Unique = true
            Me.columnEMP_ID.MaxLength = 50
            Me.columnEMP_LNAME.AllowDBNull = false
            Me.columnEMP_LNAME.MaxLength = 500
            Me.columnEMP_FNAME.AllowDBNull = false
            Me.columnEMP_FNAME.MaxLength = 500
            Me.columnEMP_MNAME.MaxLength = 500
            Me.columnEMP_POB.MaxLength = 500
            Me.columnEMP_CS.MaxLength = 50
            Me.columnEMP_HT.MaxLength = 10
            Me.columnEMP_WT.MaxLength = 10
            Me.columnEMP_BT.MaxLength = 10
            Me.columnEMPGSIS.MaxLength = 50
            Me.columnEMP_PAGIBIG.MaxLength = 50
            Me.columnEMP_PHEALTH.MaxLength = 50
            Me.columnEMP_SSS.MaxLength = 50
            Me.columnEMP_TIN.MaxLength = 50
            Me.columnEMP_AGENCYNUM.MaxLength = 50
            Me.columnEMP_TELNUM.MaxLength = 50
            Me.columnEMP_MOBNUM.MaxLength = 50
            Me.columnEMP_EMAILADD.MaxLength = 200
            Me.columnEMP_FTHRLNAME.MaxLength = 500
            Me.columnEMP_FTHRFNAME.MaxLength = 500
            Me.columnEMP_FTHRMNAME.MaxLength = 500
            Me.columnEMP_FTHRNAMEEXT.MaxLength = 10
            Me.columnEMP_MTHRLNAME.MaxLength = 500
            Me.columnEMP_MTHRFNAME.MaxLength = 500
            Me.columnEMP_MTHRMNAME.MaxLength = 500
            Me.columnEMP_GOVTISSUEDID.MaxLength = 150
            Me.columnEMP_GOVTIDNO.MaxLength = 50
            Me.columnEMP_GOVTPLACEISSUED.MaxLength = 500
            Me.columnEMP_NAMEEXT.MaxLength = 50
            Me.columnEMP_NAMETITLE.MaxLength = 50
            Me.columnEMP_MTHRMAIDENNAME.MaxLength = 500
            Me.columnEMP_DATEENC.AllowDBNull = false
            Me.columnHDIVS_CODE.MaxLength = 10
            Me.columnEMP_PHOTO_ID.MaxLength = 1500
            Me.columnEMP_PHOTO_SIGN.MaxLength = 1500
            Me.columnEMP_POSITION.MaxLength = 500
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewSPM4_PDS_LISTRow() As SPM4_PDS_LISTRow
            Return CType(Me.NewRow,SPM4_PDS_LISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SPM4_PDS_LISTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SPM4_PDS_LISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SPM4_PDS_LISTRowChangedEvent) Is Nothing) Then
                RaiseEvent SPM4_PDS_LISTRowChanged(Me, New SPM4_PDS_LISTRowChangeEvent(CType(e.Row,SPM4_PDS_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SPM4_PDS_LISTRowChangingEvent) Is Nothing) Then
                RaiseEvent SPM4_PDS_LISTRowChanging(Me, New SPM4_PDS_LISTRowChangeEvent(CType(e.Row,SPM4_PDS_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SPM4_PDS_LISTRowDeletedEvent) Is Nothing) Then
                RaiseEvent SPM4_PDS_LISTRowDeleted(Me, New SPM4_PDS_LISTRowChangeEvent(CType(e.Row,SPM4_PDS_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SPM4_PDS_LISTRowDeletingEvent) Is Nothing) Then
                RaiseEvent SPM4_PDS_LISTRowDeleting(Me, New SPM4_PDS_LISTRowChangeEvent(CType(e.Row,SPM4_PDS_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveSPM4_PDS_LISTRow(ByVal row As SPM4_PDS_LISTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SPM4_PDS_LISTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblV1_USERACCOUNTDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblV1_USERACCOUNTRow)
        
        Private columnUAC_USERNAME As Global.System.Data.DataColumn
        
        Private columnUAC_PASSWORD As Global.System.Data.DataColumn
        
        Private columnUAC_ISACTIVE As Global.System.Data.DataColumn
        
        Private columnUAC_ISLOGGED As Global.System.Data.DataColumn
        
        Private columnUAC_TYPE As Global.System.Data.DataColumn
        
        Private columnUAC_HINT As Global.System.Data.DataColumn
        
        Private columnUAC_RTFLAG As Global.System.Data.DataColumn
        
        Private columnUAC_RTNUM As Global.System.Data.DataColumn
        
        Private columnPers_ID As Global.System.Data.DataColumn
        
        Private columnUAC_LASTUSER As Global.System.Data.DataColumn
        
        Private columnUAC_ISDEVELOPER As Global.System.Data.DataColumn
        
        Private columnUAC_PASSWORD_UNENC As Global.System.Data.DataColumn
        
        Private columnEMP_ID As Global.System.Data.DataColumn
        
        Private columnHRIS_EMPNO As Global.System.Data.DataColumn
        
        Private columnEMP_ID_TEMP As Global.System.Data.DataColumn
        
        Private columnIS_CUSTODIAN As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblV1_USERACCOUNT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_USERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_USERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_PASSWORDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_PASSWORD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_ISACTIVEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_ISACTIVE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_ISLOGGEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_ISLOGGED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_HINTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_HINT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_RTFLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_RTFLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_RTNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_RTNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Pers_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPers_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_LASTUSERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_LASTUSER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_ISDEVELOPERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_ISDEVELOPER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_PASSWORD_UNENCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_PASSWORD_UNENC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HRIS_EMPNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRIS_EMPNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EMP_ID_TEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_ID_TEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IS_CUSTODIANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_CUSTODIAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblV1_USERACCOUNTRow
            Get
                Return CType(Me.Rows(index),tblV1_USERACCOUNTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_USERACCOUNTRowChanging As tblV1_USERACCOUNTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_USERACCOUNTRowChanged As tblV1_USERACCOUNTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_USERACCOUNTRowDeleting As tblV1_USERACCOUNTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_USERACCOUNTRowDeleted As tblV1_USERACCOUNTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblV1_USERACCOUNTRow(ByVal row As tblV1_USERACCOUNTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblV1_USERACCOUNTRow( _
                    ByVal UAC_USERNAME As String,  _
                    ByVal UAC_PASSWORD As String,  _
                    ByVal UAC_ISACTIVE As Boolean,  _
                    ByVal UAC_ISLOGGED As Boolean,  _
                    ByVal UAC_TYPE As Integer,  _
                    ByVal UAC_HINT As String,  _
                    ByVal UAC_RTFLAG As Boolean,  _
                    ByVal UAC_RTNUM As Integer,  _
                    ByVal Pers_ID As String,  _
                    ByVal UAC_LASTUSER As String,  _
                    ByVal UAC_ISDEVELOPER As Boolean,  _
                    ByVal UAC_PASSWORD_UNENC As String,  _
                    ByVal EMP_ID As String,  _
                    ByVal HRIS_EMPNO As String,  _
                    ByVal EMP_ID_TEMP As String,  _
                    ByVal IS_CUSTODIAN As Integer) As tblV1_USERACCOUNTRow
            Dim rowtblV1_USERACCOUNTRow As tblV1_USERACCOUNTRow = CType(Me.NewRow,tblV1_USERACCOUNTRow)
            Dim columnValuesArray() As Object = New Object() {UAC_USERNAME, UAC_PASSWORD, UAC_ISACTIVE, UAC_ISLOGGED, UAC_TYPE, UAC_HINT, UAC_RTFLAG, UAC_RTNUM, Pers_ID, UAC_LASTUSER, UAC_ISDEVELOPER, UAC_PASSWORD_UNENC, EMP_ID, HRIS_EMPNO, EMP_ID_TEMP, IS_CUSTODIAN}
            rowtblV1_USERACCOUNTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblV1_USERACCOUNTRow)
            Return rowtblV1_USERACCOUNTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByUAC_USERNAME(ByVal UAC_USERNAME As String) As tblV1_USERACCOUNTRow
            Return CType(Me.Rows.Find(New Object() {UAC_USERNAME}),tblV1_USERACCOUNTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblV1_USERACCOUNTDataTable = CType(MyBase.Clone,tblV1_USERACCOUNTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblV1_USERACCOUNTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnUAC_USERNAME = MyBase.Columns("UAC_USERNAME")
            Me.columnUAC_PASSWORD = MyBase.Columns("UAC_PASSWORD")
            Me.columnUAC_ISACTIVE = MyBase.Columns("UAC_ISACTIVE")
            Me.columnUAC_ISLOGGED = MyBase.Columns("UAC_ISLOGGED")
            Me.columnUAC_TYPE = MyBase.Columns("UAC_TYPE")
            Me.columnUAC_HINT = MyBase.Columns("UAC_HINT")
            Me.columnUAC_RTFLAG = MyBase.Columns("UAC_RTFLAG")
            Me.columnUAC_RTNUM = MyBase.Columns("UAC_RTNUM")
            Me.columnPers_ID = MyBase.Columns("Pers_ID")
            Me.columnUAC_LASTUSER = MyBase.Columns("UAC_LASTUSER")
            Me.columnUAC_ISDEVELOPER = MyBase.Columns("UAC_ISDEVELOPER")
            Me.columnUAC_PASSWORD_UNENC = MyBase.Columns("UAC_PASSWORD_UNENC")
            Me.columnEMP_ID = MyBase.Columns("EMP_ID")
            Me.columnHRIS_EMPNO = MyBase.Columns("HRIS_EMPNO")
            Me.columnEMP_ID_TEMP = MyBase.Columns("EMP_ID_TEMP")
            Me.columnIS_CUSTODIAN = MyBase.Columns("IS_CUSTODIAN")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnUAC_USERNAME = New Global.System.Data.DataColumn("UAC_USERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_USERNAME)
            Me.columnUAC_PASSWORD = New Global.System.Data.DataColumn("UAC_PASSWORD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_PASSWORD)
            Me.columnUAC_ISACTIVE = New Global.System.Data.DataColumn("UAC_ISACTIVE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_ISACTIVE)
            Me.columnUAC_ISLOGGED = New Global.System.Data.DataColumn("UAC_ISLOGGED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_ISLOGGED)
            Me.columnUAC_TYPE = New Global.System.Data.DataColumn("UAC_TYPE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_TYPE)
            Me.columnUAC_HINT = New Global.System.Data.DataColumn("UAC_HINT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_HINT)
            Me.columnUAC_RTFLAG = New Global.System.Data.DataColumn("UAC_RTFLAG", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_RTFLAG)
            Me.columnUAC_RTNUM = New Global.System.Data.DataColumn("UAC_RTNUM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_RTNUM)
            Me.columnPers_ID = New Global.System.Data.DataColumn("Pers_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPers_ID)
            Me.columnUAC_LASTUSER = New Global.System.Data.DataColumn("UAC_LASTUSER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_LASTUSER)
            Me.columnUAC_ISDEVELOPER = New Global.System.Data.DataColumn("UAC_ISDEVELOPER", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_ISDEVELOPER)
            Me.columnUAC_PASSWORD_UNENC = New Global.System.Data.DataColumn("UAC_PASSWORD_UNENC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_PASSWORD_UNENC)
            Me.columnEMP_ID = New Global.System.Data.DataColumn("EMP_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_ID)
            Me.columnHRIS_EMPNO = New Global.System.Data.DataColumn("HRIS_EMPNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRIS_EMPNO)
            Me.columnEMP_ID_TEMP = New Global.System.Data.DataColumn("EMP_ID_TEMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_ID_TEMP)
            Me.columnIS_CUSTODIAN = New Global.System.Data.DataColumn("IS_CUSTODIAN", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_CUSTODIAN)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnUAC_USERNAME}, true))
            Me.columnUAC_USERNAME.AllowDBNull = false
            Me.columnUAC_USERNAME.Unique = true
            Me.columnUAC_USERNAME.MaxLength = 100
            Me.columnUAC_PASSWORD.AllowDBNull = false
            Me.columnUAC_PASSWORD.MaxLength = 100
            Me.columnUAC_ISACTIVE.AllowDBNull = false
            Me.columnUAC_ISLOGGED.AllowDBNull = false
            Me.columnUAC_TYPE.AllowDBNull = false
            Me.columnUAC_HINT.MaxLength = 100
            Me.columnUAC_RTFLAG.AllowDBNull = false
            Me.columnUAC_RTNUM.AllowDBNull = false
            Me.columnPers_ID.MaxLength = 10
            Me.columnUAC_LASTUSER.AllowDBNull = false
            Me.columnUAC_LASTUSER.MaxLength = 150
            Me.columnUAC_PASSWORD_UNENC.MaxLength = 100
            Me.columnEMP_ID.MaxLength = 50
            Me.columnHRIS_EMPNO.MaxLength = 20
            Me.columnEMP_ID_TEMP.MaxLength = 50
            Me.columnIS_CUSTODIAN.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblV1_USERACCOUNTRow() As tblV1_USERACCOUNTRow
            Return CType(Me.NewRow,tblV1_USERACCOUNTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblV1_USERACCOUNTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblV1_USERACCOUNTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblV1_USERACCOUNTRowChangedEvent) Is Nothing) Then
                RaiseEvent tblV1_USERACCOUNTRowChanged(Me, New tblV1_USERACCOUNTRowChangeEvent(CType(e.Row,tblV1_USERACCOUNTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblV1_USERACCOUNTRowChangingEvent) Is Nothing) Then
                RaiseEvent tblV1_USERACCOUNTRowChanging(Me, New tblV1_USERACCOUNTRowChangeEvent(CType(e.Row,tblV1_USERACCOUNTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblV1_USERACCOUNTRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblV1_USERACCOUNTRowDeleted(Me, New tblV1_USERACCOUNTRowChangeEvent(CType(e.Row,tblV1_USERACCOUNTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblV1_USERACCOUNTRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblV1_USERACCOUNTRowDeleting(Me, New tblV1_USERACCOUNTRowChangeEvent(CType(e.Row,tblV1_USERACCOUNTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblV1_USERACCOUNTRow(ByVal row As tblV1_USERACCOUNTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblV1_USERACCOUNTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblV1_USERACCOUNTLOGSDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblV1_USERACCOUNTLOGSRow)
        
        Private columnUALG_DATETIMELOGGED As Global.System.Data.DataColumn
        
        Private columnUAC_USERNAME As Global.System.Data.DataColumn
        
        Private columnUALG_PCNAME As Global.System.Data.DataColumn
        
        Private columnUALG_TYPE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblV1_USERACCOUNTLOGS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UALG_DATETIMELOGGEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUALG_DATETIMELOGGED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UAC_USERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUAC_USERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UALG_PCNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUALG_PCNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UALG_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUALG_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblV1_USERACCOUNTLOGSRow
            Get
                Return CType(Me.Rows(index),tblV1_USERACCOUNTLOGSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_USERACCOUNTLOGSRowChanging As tblV1_USERACCOUNTLOGSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_USERACCOUNTLOGSRowChanged As tblV1_USERACCOUNTLOGSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_USERACCOUNTLOGSRowDeleting As tblV1_USERACCOUNTLOGSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event tblV1_USERACCOUNTLOGSRowDeleted As tblV1_USERACCOUNTLOGSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddtblV1_USERACCOUNTLOGSRow(ByVal row As tblV1_USERACCOUNTLOGSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddtblV1_USERACCOUNTLOGSRow(ByVal UALG_DATETIMELOGGED As Date, ByVal UAC_USERNAME As String, ByVal UALG_PCNAME As String, ByVal UALG_TYPE As Boolean) As tblV1_USERACCOUNTLOGSRow
            Dim rowtblV1_USERACCOUNTLOGSRow As tblV1_USERACCOUNTLOGSRow = CType(Me.NewRow,tblV1_USERACCOUNTLOGSRow)
            Dim columnValuesArray() As Object = New Object() {UALG_DATETIMELOGGED, UAC_USERNAME, UALG_PCNAME, UALG_TYPE}
            rowtblV1_USERACCOUNTLOGSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblV1_USERACCOUNTLOGSRow)
            Return rowtblV1_USERACCOUNTLOGSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByUALG_DATETIMELOGGED(ByVal UALG_DATETIMELOGGED As Date) As tblV1_USERACCOUNTLOGSRow
            Return CType(Me.Rows.Find(New Object() {UALG_DATETIMELOGGED}),tblV1_USERACCOUNTLOGSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblV1_USERACCOUNTLOGSDataTable = CType(MyBase.Clone,tblV1_USERACCOUNTLOGSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblV1_USERACCOUNTLOGSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnUALG_DATETIMELOGGED = MyBase.Columns("UALG_DATETIMELOGGED")
            Me.columnUAC_USERNAME = MyBase.Columns("UAC_USERNAME")
            Me.columnUALG_PCNAME = MyBase.Columns("UALG_PCNAME")
            Me.columnUALG_TYPE = MyBase.Columns("UALG_TYPE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnUALG_DATETIMELOGGED = New Global.System.Data.DataColumn("UALG_DATETIMELOGGED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUALG_DATETIMELOGGED)
            Me.columnUAC_USERNAME = New Global.System.Data.DataColumn("UAC_USERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUAC_USERNAME)
            Me.columnUALG_PCNAME = New Global.System.Data.DataColumn("UALG_PCNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUALG_PCNAME)
            Me.columnUALG_TYPE = New Global.System.Data.DataColumn("UALG_TYPE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUALG_TYPE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnUALG_DATETIMELOGGED}, true))
            Me.columnUALG_DATETIMELOGGED.AllowDBNull = false
            Me.columnUALG_DATETIMELOGGED.Unique = true
            Me.columnUAC_USERNAME.AllowDBNull = false
            Me.columnUAC_USERNAME.MaxLength = 100
            Me.columnUALG_PCNAME.AllowDBNull = false
            Me.columnUALG_PCNAME.MaxLength = 500
            Me.columnUALG_TYPE.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewtblV1_USERACCOUNTLOGSRow() As tblV1_USERACCOUNTLOGSRow
            Return CType(Me.NewRow,tblV1_USERACCOUNTLOGSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblV1_USERACCOUNTLOGSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblV1_USERACCOUNTLOGSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblV1_USERACCOUNTLOGSRowChangedEvent) Is Nothing) Then
                RaiseEvent tblV1_USERACCOUNTLOGSRowChanged(Me, New tblV1_USERACCOUNTLOGSRowChangeEvent(CType(e.Row,tblV1_USERACCOUNTLOGSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblV1_USERACCOUNTLOGSRowChangingEvent) Is Nothing) Then
                RaiseEvent tblV1_USERACCOUNTLOGSRowChanging(Me, New tblV1_USERACCOUNTLOGSRowChangeEvent(CType(e.Row,tblV1_USERACCOUNTLOGSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblV1_USERACCOUNTLOGSRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblV1_USERACCOUNTLOGSRowDeleted(Me, New tblV1_USERACCOUNTLOGSRowChangeEvent(CType(e.Row,tblV1_USERACCOUNTLOGSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblV1_USERACCOUNTLOGSRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblV1_USERACCOUNTLOGSRowDeleting(Me, New tblV1_USERACCOUNTLOGSRowChangeEvent(CType(e.Row,tblV1_USERACCOUNTLOGSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovetblV1_USERACCOUNTLOGSRow(ByVal row As tblV1_USERACCOUNTLOGSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_TABLES = New DS_TABLES()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblV1_USERACCOUNTLOGSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SPM4_PDS_LISTRow
        Inherits Global.System.Data.DataRow
        
        Private tableSPM4_PDS_LIST As SPM4_PDS_LISTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSPM4_PDS_LIST = CType(Me.Table,SPM4_PDS_LISTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FULLNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.FULLNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FULLNAME' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.FULLNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_ID() As String
            Get
                Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_IDColumn),String)
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_LNAME() As String
            Get
                Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_LNAMEColumn),String)
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_LNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_FNAME() As String
            Get
                Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_FNAMEColumn),String)
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_FNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_MNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_MNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_MNAME' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_MNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_DOB() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_DOBColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_DOB' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_DOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_POB() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_POBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_POB' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_POBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_ISMALE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_ISMALEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_ISMALE' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_ISMALEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_CS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_CSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_CS' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_CSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_HT() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_HTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_HT' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_HTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_WT() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_WTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_WT' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_WTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_BT() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_BTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_BT' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_BTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMPGSIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMPGSISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMPGSIS' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMPGSISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_PAGIBIG() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_PAGIBIGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_PAGIBIG' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_PAGIBIGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_PHEALTH() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_PHEALTHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_PHEALTH' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_PHEALTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_SSS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_SSSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_SSS' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_SSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_TIN() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_TINColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_TIN' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_TINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_AGENCYNUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_AGENCYNUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_AGENCYNUM' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_AGENCYNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_TELNUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_TELNUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_TELNUM' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_TELNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_MOBNUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_MOBNUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_MOBNUM' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_MOBNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_EMAILADD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_EMAILADDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_EMAILADD' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_EMAILADDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_FTHRLNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_FTHRLNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_FTHRLNAME' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_FTHRLNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_FTHRFNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_FTHRFNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_FTHRFNAME' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_FTHRFNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_FTHRMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_FTHRMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_FTHRMNAME' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_FTHRMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_FTHRNAMEEXT() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_FTHRNAMEEXTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_FTHRNAMEEXT' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_FTHRNAMEEXTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_MTHRLNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_MTHRLNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_MTHRLNAME' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_MTHRLNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_MTHRFNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_MTHRFNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_MTHRFNAME' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_MTHRFNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_MTHRMNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_MTHRMNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_MTHRMNAME' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_MTHRMNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_GOVTISSUEDID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_GOVTISSUEDIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_GOVTISSUEDID' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_GOVTISSUEDIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_GOVTIDNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_GOVTIDNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_GOVTIDNO' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_GOVTIDNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_GOVTDATEISSUED() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_GOVTDATEISSUEDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_GOVTDATEISSUED' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_GOVTDATEISSUEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_GOVTPLACEISSUED() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_GOVTPLACEISSUEDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_GOVTPLACEISSUED' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_GOVTPLACEISSUEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_PHOTO() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_PHOTOColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_PHOTO' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_PHOTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_SIGNATURE() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_SIGNATUREColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_SIGNATURE' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_SIGNATUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_DATEACCOM() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_DATEACCOMColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_DATEACCOM' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_DATEACCOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_RTHUMB() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_RTHUMBColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_RTHUMB' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_RTHUMBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_EMP_SSWORNDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_EMP_SSWORNDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_EMP_SSWORNDATE' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_EMP_SSWORNDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_ADAOTH() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_ADAOTHColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_ADAOTH' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_ADAOTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_NAMEEXT() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_NAMEEXTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_NAMEEXT' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_NAMEEXTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_NAMETITLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_NAMETITLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_NAMETITLE' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_NAMETITLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_MTHRMAIDENNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_MTHRMAIDENNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_MTHRMAIDENNAME' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_MTHRMAIDENNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_SRVSTAT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_SRVSTATColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_SRVSTAT' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_SRVSTATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_SRVSTATDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_SRVSTATDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_SRVSTATDATE' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_SRVSTATDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_DATEENC() As Date
            Get
                Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_DATEENCColumn),Date)
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_DATEENCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HDIVS_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.HDIVS_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HDIVS_CODE' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.HDIVS_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_PHOTO_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_PHOTO_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_PHOTO_ID' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_PHOTO_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_PHOTO_SIGN() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_PHOTO_SIGNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_PHOTO_SIGN' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_PHOTO_SIGNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_POSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSPM4_PDS_LIST.EMP_POSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_POSITION' in table 'SPM4_PDS_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSPM4_PDS_LIST.EMP_POSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFULLNAMENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.FULLNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFULLNAMENull()
            Me(Me.tableSPM4_PDS_LIST.FULLNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_MNAMENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_MNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_MNAMENull()
            Me(Me.tableSPM4_PDS_LIST.EMP_MNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_DOBNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_DOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_DOBNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_DOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_POBNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_POBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_POBNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_POBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_ISMALENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_ISMALEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_ISMALENull()
            Me(Me.tableSPM4_PDS_LIST.EMP_ISMALEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_CSNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_CSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_CSNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_CSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_HTNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_HTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_HTNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_HTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_WTNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_WTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_WTNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_WTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_BTNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_BTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_BTNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_BTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMPGSISNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMPGSISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMPGSISNull()
            Me(Me.tableSPM4_PDS_LIST.EMPGSISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_PAGIBIGNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_PAGIBIGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_PAGIBIGNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_PAGIBIGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_PHEALTHNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_PHEALTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_PHEALTHNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_PHEALTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_SSSNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_SSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_SSSNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_SSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_TINNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_TINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_TINNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_TINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_AGENCYNUMNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_AGENCYNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_AGENCYNUMNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_AGENCYNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_TELNUMNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_TELNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_TELNUMNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_TELNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_MOBNUMNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_MOBNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_MOBNUMNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_MOBNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_EMAILADDNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_EMAILADDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_EMAILADDNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_EMAILADDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_FTHRLNAMENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_FTHRLNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_FTHRLNAMENull()
            Me(Me.tableSPM4_PDS_LIST.EMP_FTHRLNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_FTHRFNAMENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_FTHRFNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_FTHRFNAMENull()
            Me(Me.tableSPM4_PDS_LIST.EMP_FTHRFNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_FTHRMNAMENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_FTHRMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_FTHRMNAMENull()
            Me(Me.tableSPM4_PDS_LIST.EMP_FTHRMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_FTHRNAMEEXTNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_FTHRNAMEEXTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_FTHRNAMEEXTNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_FTHRNAMEEXTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_MTHRLNAMENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_MTHRLNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_MTHRLNAMENull()
            Me(Me.tableSPM4_PDS_LIST.EMP_MTHRLNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_MTHRFNAMENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_MTHRFNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_MTHRFNAMENull()
            Me(Me.tableSPM4_PDS_LIST.EMP_MTHRFNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_MTHRMNAMENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_MTHRMNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_MTHRMNAMENull()
            Me(Me.tableSPM4_PDS_LIST.EMP_MTHRMNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_GOVTISSUEDIDNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_GOVTISSUEDIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_GOVTISSUEDIDNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_GOVTISSUEDIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_GOVTIDNONull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_GOVTIDNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_GOVTIDNONull()
            Me(Me.tableSPM4_PDS_LIST.EMP_GOVTIDNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_GOVTDATEISSUEDNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_GOVTDATEISSUEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_GOVTDATEISSUEDNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_GOVTDATEISSUEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_GOVTPLACEISSUEDNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_GOVTPLACEISSUEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_GOVTPLACEISSUEDNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_GOVTPLACEISSUEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_PHOTONull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_PHOTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_PHOTONull()
            Me(Me.tableSPM4_PDS_LIST.EMP_PHOTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_SIGNATURENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_SIGNATUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_SIGNATURENull()
            Me(Me.tableSPM4_PDS_LIST.EMP_SIGNATUREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_DATEACCOMNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_DATEACCOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_DATEACCOMNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_DATEACCOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_RTHUMBNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_RTHUMBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_RTHUMBNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_RTHUMBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_EMP_SSWORNDATENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_EMP_SSWORNDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_EMP_SSWORNDATENull()
            Me(Me.tableSPM4_PDS_LIST.EMP_EMP_SSWORNDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_ADAOTHNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_ADAOTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_ADAOTHNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_ADAOTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_NAMEEXTNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_NAMEEXTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_NAMEEXTNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_NAMEEXTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_NAMETITLENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_NAMETITLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_NAMETITLENull()
            Me(Me.tableSPM4_PDS_LIST.EMP_NAMETITLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_MTHRMAIDENNAMENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_MTHRMAIDENNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_MTHRMAIDENNAMENull()
            Me(Me.tableSPM4_PDS_LIST.EMP_MTHRMAIDENNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_SRVSTATNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_SRVSTATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_SRVSTATNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_SRVSTATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_SRVSTATDATENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_SRVSTATDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_SRVSTATDATENull()
            Me(Me.tableSPM4_PDS_LIST.EMP_SRVSTATDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHDIVS_CODENull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.HDIVS_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHDIVS_CODENull()
            Me(Me.tableSPM4_PDS_LIST.HDIVS_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_PHOTO_IDNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_PHOTO_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_PHOTO_IDNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_PHOTO_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_PHOTO_SIGNNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_PHOTO_SIGNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_PHOTO_SIGNNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_PHOTO_SIGNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_POSITIONNull() As Boolean
            Return Me.IsNull(Me.tableSPM4_PDS_LIST.EMP_POSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_POSITIONNull()
            Me(Me.tableSPM4_PDS_LIST.EMP_POSITIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblV1_USERACCOUNTRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblV1_USERACCOUNT As tblV1_USERACCOUNTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblV1_USERACCOUNT = CType(Me.Table,tblV1_USERACCOUNTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_USERNAME() As String
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_USERNAMEColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_USERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_PASSWORD() As String
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_PASSWORDColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_PASSWORDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_ISACTIVE() As Boolean
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_ISACTIVEColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_ISACTIVEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_ISLOGGED() As Boolean
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_ISLOGGEDColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_ISLOGGEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_TYPE() As Integer
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_TYPEColumn),Integer)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_HINT() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_HINTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UAC_HINT' in table 'tblV1_USERACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_HINTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_RTFLAG() As Boolean
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_RTFLAGColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_RTFLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_RTNUM() As Integer
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_RTNUMColumn),Integer)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_RTNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Pers_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_USERACCOUNT.Pers_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pers_ID' in table 'tblV1_USERACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.Pers_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_LASTUSER() As String
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_LASTUSERColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_LASTUSERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_ISDEVELOPER() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_ISDEVELOPERColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UAC_ISDEVELOPER' in table 'tblV1_USERACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_ISDEVELOPERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_PASSWORD_UNENC() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_USERACCOUNT.UAC_PASSWORD_UNENCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UAC_PASSWORD_UNENC' in table 'tblV1_USERACCOUNT' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.UAC_PASSWORD_UNENCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_USERACCOUNT.EMP_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_ID' in table 'tblV1_USERACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.EMP_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HRIS_EMPNO() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_USERACCOUNT.HRIS_EMPNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRIS_EMPNO' in table 'tblV1_USERACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.HRIS_EMPNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EMP_ID_TEMP() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblV1_USERACCOUNT.EMP_ID_TEMPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMP_ID_TEMP' in table 'tblV1_USERACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.EMP_ID_TEMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IS_CUSTODIAN() As Integer
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNT.IS_CUSTODIANColumn),Integer)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNT.IS_CUSTODIANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUAC_HINTNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_USERACCOUNT.UAC_HINTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUAC_HINTNull()
            Me(Me.tabletblV1_USERACCOUNT.UAC_HINTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPers_IDNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_USERACCOUNT.Pers_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPers_IDNull()
            Me(Me.tabletblV1_USERACCOUNT.Pers_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUAC_ISDEVELOPERNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_USERACCOUNT.UAC_ISDEVELOPERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUAC_ISDEVELOPERNull()
            Me(Me.tabletblV1_USERACCOUNT.UAC_ISDEVELOPERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUAC_PASSWORD_UNENCNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_USERACCOUNT.UAC_PASSWORD_UNENCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUAC_PASSWORD_UNENCNull()
            Me(Me.tabletblV1_USERACCOUNT.UAC_PASSWORD_UNENCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_IDNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_USERACCOUNT.EMP_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_IDNull()
            Me(Me.tabletblV1_USERACCOUNT.EMP_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHRIS_EMPNONull() As Boolean
            Return Me.IsNull(Me.tabletblV1_USERACCOUNT.HRIS_EMPNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHRIS_EMPNONull()
            Me(Me.tabletblV1_USERACCOUNT.HRIS_EMPNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEMP_ID_TEMPNull() As Boolean
            Return Me.IsNull(Me.tabletblV1_USERACCOUNT.EMP_ID_TEMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEMP_ID_TEMPNull()
            Me(Me.tabletblV1_USERACCOUNT.EMP_ID_TEMPColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tblV1_USERACCOUNTLOGSRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblV1_USERACCOUNTLOGS As tblV1_USERACCOUNTLOGSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblV1_USERACCOUNTLOGS = CType(Me.Table,tblV1_USERACCOUNTLOGSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UALG_DATETIMELOGGED() As Date
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNTLOGS.UALG_DATETIMELOGGEDColumn),Date)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNTLOGS.UALG_DATETIMELOGGEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UAC_USERNAME() As String
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNTLOGS.UAC_USERNAMEColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNTLOGS.UAC_USERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UALG_PCNAME() As String
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNTLOGS.UALG_PCNAMEColumn),String)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNTLOGS.UALG_PCNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UALG_TYPE() As Boolean
            Get
                Return CType(Me(Me.tabletblV1_USERACCOUNTLOGS.UALG_TYPEColumn),Boolean)
            End Get
            Set
                Me(Me.tabletblV1_USERACCOUNTLOGS.UALG_TYPEColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class SPM4_PDS_LISTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SPM4_PDS_LISTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As SPM4_PDS_LISTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As SPM4_PDS_LISTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblV1_USERACCOUNTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblV1_USERACCOUNTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblV1_USERACCOUNTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblV1_USERACCOUNTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class tblV1_USERACCOUNTLOGSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblV1_USERACCOUNTLOGSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As tblV1_USERACCOUNTLOGSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As tblV1_USERACCOUNTLOGSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DS_TABLESTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SPM4_PDS_LISTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SPM4_PDS_LIST"
            tableMapping.ColumnMappings.Add("FULLNAME", "FULLNAME")
            tableMapping.ColumnMappings.Add("EMP_ID", "EMP_ID")
            tableMapping.ColumnMappings.Add("EMP_LNAME", "EMP_LNAME")
            tableMapping.ColumnMappings.Add("EMP_FNAME", "EMP_FNAME")
            tableMapping.ColumnMappings.Add("EMP_MNAME", "EMP_MNAME")
            tableMapping.ColumnMappings.Add("EMP_DOB", "EMP_DOB")
            tableMapping.ColumnMappings.Add("EMP_POB", "EMP_POB")
            tableMapping.ColumnMappings.Add("EMP_ISMALE", "EMP_ISMALE")
            tableMapping.ColumnMappings.Add("EMP_CS", "EMP_CS")
            tableMapping.ColumnMappings.Add("EMP_HT", "EMP_HT")
            tableMapping.ColumnMappings.Add("EMP_WT", "EMP_WT")
            tableMapping.ColumnMappings.Add("EMP_BT", "EMP_BT")
            tableMapping.ColumnMappings.Add("EMPGSIS", "EMPGSIS")
            tableMapping.ColumnMappings.Add("EMP_PAGIBIG", "EMP_PAGIBIG")
            tableMapping.ColumnMappings.Add("EMP_PHEALTH", "EMP_PHEALTH")
            tableMapping.ColumnMappings.Add("EMP_SSS", "EMP_SSS")
            tableMapping.ColumnMappings.Add("EMP_TIN", "EMP_TIN")
            tableMapping.ColumnMappings.Add("EMP_AGENCYNUM", "EMP_AGENCYNUM")
            tableMapping.ColumnMappings.Add("EMP_TELNUM", "EMP_TELNUM")
            tableMapping.ColumnMappings.Add("EMP_MOBNUM", "EMP_MOBNUM")
            tableMapping.ColumnMappings.Add("EMP_EMAILADD", "EMP_EMAILADD")
            tableMapping.ColumnMappings.Add("EMP_FTHRLNAME", "EMP_FTHRLNAME")
            tableMapping.ColumnMappings.Add("EMP_FTHRFNAME", "EMP_FTHRFNAME")
            tableMapping.ColumnMappings.Add("EMP_FTHRMNAME", "EMP_FTHRMNAME")
            tableMapping.ColumnMappings.Add("EMP_FTHRNAMEEXT", "EMP_FTHRNAMEEXT")
            tableMapping.ColumnMappings.Add("EMP_MTHRLNAME", "EMP_MTHRLNAME")
            tableMapping.ColumnMappings.Add("EMP_MTHRFNAME", "EMP_MTHRFNAME")
            tableMapping.ColumnMappings.Add("EMP_MTHRMNAME", "EMP_MTHRMNAME")
            tableMapping.ColumnMappings.Add("EMP_GOVTISSUEDID", "EMP_GOVTISSUEDID")
            tableMapping.ColumnMappings.Add("EMP_GOVTIDNO", "EMP_GOVTIDNO")
            tableMapping.ColumnMappings.Add("EMP_GOVTDATEISSUED", "EMP_GOVTDATEISSUED")
            tableMapping.ColumnMappings.Add("EMP_GOVTPLACEISSUED", "EMP_GOVTPLACEISSUED")
            tableMapping.ColumnMappings.Add("EMP_PHOTO", "EMP_PHOTO")
            tableMapping.ColumnMappings.Add("EMP_SIGNATURE", "EMP_SIGNATURE")
            tableMapping.ColumnMappings.Add("EMP_DATEACCOM", "EMP_DATEACCOM")
            tableMapping.ColumnMappings.Add("EMP_RTHUMB", "EMP_RTHUMB")
            tableMapping.ColumnMappings.Add("EMP_EMP_SSWORNDATE", "EMP_EMP_SSWORNDATE")
            tableMapping.ColumnMappings.Add("EMP_ADAOTH", "EMP_ADAOTH")
            tableMapping.ColumnMappings.Add("EMP_NAMEEXT", "EMP_NAMEEXT")
            tableMapping.ColumnMappings.Add("EMP_NAMETITLE", "EMP_NAMETITLE")
            tableMapping.ColumnMappings.Add("EMP_MTHRMAIDENNAME", "EMP_MTHRMAIDENNAME")
            tableMapping.ColumnMappings.Add("EMP_SRVSTAT", "EMP_SRVSTAT")
            tableMapping.ColumnMappings.Add("EMP_SRVSTATDATE", "EMP_SRVSTATDATE")
            tableMapping.ColumnMappings.Add("EMP_DATEENC", "EMP_DATEENC")
            tableMapping.ColumnMappings.Add("HDIVS_CODE", "HDIVS_CODE")
            tableMapping.ColumnMappings.Add("EMP_PHOTO_ID", "EMP_PHOTO_ID")
            tableMapping.ColumnMappings.Add("EMP_PHOTO_SIGN", "EMP_PHOTO_SIGN")
            tableMapping.ColumnMappings.Add("EMP_POSITION", "EMP_POSITION")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SRBI.My.MySettings.Default.PRAJO_DATABASEConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.SPM4_PDS_LIST"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEARCH", Global.System.Data.SqlDbType.VarChar, 200, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.SPM4_PDS_LIST"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEARCH", Global.System.Data.SqlDbType.VarChar, 200, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_TABLES.SPM4_PDS_LISTDataTable, ByVal SEARCH As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SEARCH Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SEARCH,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBySEARCH(ByVal dataTable As DS_TABLES.SPM4_PDS_LISTDataTable, ByVal SEARCH As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (SEARCH Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SEARCH,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblV1_USERACCOUNTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblV1_USERACCOUNT"
            tableMapping.ColumnMappings.Add("UAC_USERNAME", "UAC_USERNAME")
            tableMapping.ColumnMappings.Add("UAC_PASSWORD", "UAC_PASSWORD")
            tableMapping.ColumnMappings.Add("UAC_ISACTIVE", "UAC_ISACTIVE")
            tableMapping.ColumnMappings.Add("UAC_ISLOGGED", "UAC_ISLOGGED")
            tableMapping.ColumnMappings.Add("UAC_TYPE", "UAC_TYPE")
            tableMapping.ColumnMappings.Add("UAC_HINT", "UAC_HINT")
            tableMapping.ColumnMappings.Add("UAC_RTFLAG", "UAC_RTFLAG")
            tableMapping.ColumnMappings.Add("UAC_RTNUM", "UAC_RTNUM")
            tableMapping.ColumnMappings.Add("Pers_ID", "Pers_ID")
            tableMapping.ColumnMappings.Add("UAC_LASTUSER", "UAC_LASTUSER")
            tableMapping.ColumnMappings.Add("UAC_ISDEVELOPER", "UAC_ISDEVELOPER")
            tableMapping.ColumnMappings.Add("UAC_PASSWORD_UNENC", "UAC_PASSWORD_UNENC")
            tableMapping.ColumnMappings.Add("EMP_ID", "EMP_ID")
            tableMapping.ColumnMappings.Add("HRIS_EMPNO", "HRIS_EMPNO")
            tableMapping.ColumnMappings.Add("EMP_ID_TEMP", "EMP_ID_TEMP")
            tableMapping.ColumnMappings.Add("IS_CUSTODIAN", "IS_CUSTODIAN")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblV1_USERACCOUNT] WHERE (([UAC_USERNAME] = @Original_UAC_USERNAME) "& _ 
                "AND ([UAC_PASSWORD] = @Original_UAC_PASSWORD) AND ([UAC_ISACTIVE] = @Original_UA"& _ 
                "C_ISACTIVE) AND ([UAC_ISLOGGED] = @Original_UAC_ISLOGGED) AND ([UAC_TYPE] = @Ori"& _ 
                "ginal_UAC_TYPE) AND ((@IsNull_UAC_HINT = 1 AND [UAC_HINT] IS NULL) OR ([UAC_HINT"& _ 
                "] = @Original_UAC_HINT)) AND ([UAC_RTFLAG] = @Original_UAC_RTFLAG) AND ([UAC_RTN"& _ 
                "UM] = @Original_UAC_RTNUM) AND ((@IsNull_Pers_ID = 1 AND [Pers_ID] IS NULL) OR ("& _ 
                "[Pers_ID] = @Original_Pers_ID)) AND ([UAC_LASTUSER] = @Original_UAC_LASTUSER) AN"& _ 
                "D ((@IsNull_UAC_ISDEVELOPER = 1 AND [UAC_ISDEVELOPER] IS NULL) OR ([UAC_ISDEVELO"& _ 
                "PER] = @Original_UAC_ISDEVELOPER)) AND ((@IsNull_UAC_PASSWORD_UNENC = 1 AND [UAC"& _ 
                "_PASSWORD_UNENC] IS NULL) OR ([UAC_PASSWORD_UNENC] = @Original_UAC_PASSWORD_UNEN"& _ 
                "C)) AND ((@IsNull_EMP_ID = 1 AND [EMP_ID] IS NULL) OR ([EMP_ID] = @Original_EMP_"& _ 
                "ID)) AND ((@IsNull_HRIS_EMPNO = 1 AND [HRIS_EMPNO] IS NULL) OR ([HRIS_EMPNO] = @"& _ 
                "Original_HRIS_EMPNO)) AND ((@IsNull_EMP_ID_TEMP = 1 AND [EMP_ID_TEMP] IS NULL) O"& _ 
                "R ([EMP_ID_TEMP] = @Original_EMP_ID_TEMP)) AND ([IS_CUSTODIAN] = @Original_IS_CU"& _ 
                "STODIAN))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_PASSWORD", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_ISACTIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISACTIVE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_ISLOGGED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISLOGGED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_TYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UAC_HINT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_HINT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_HINT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_HINT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_RTFLAG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_RTFLAG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_RTNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_RTNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Pers_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Pers_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_LASTUSER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_LASTUSER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UAC_ISDEVELOPER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISDEVELOPER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_ISDEVELOPER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISDEVELOPER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UAC_PASSWORD_UNENC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD_UNENC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_PASSWORD_UNENC", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD_UNENC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMP_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMP_ID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMP_ID_TEMP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_ID_TEMP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMP_ID_TEMP", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_ID_TEMP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IS_CUSTODIAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_CUSTODIAN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblV1_USERACCOUNT] ([UAC_USERNAME], [UAC_PASSWORD], [UAC_ISACTIVE], "& _ 
                "[UAC_ISLOGGED], [UAC_TYPE], [UAC_HINT], [UAC_RTFLAG], [UAC_RTNUM], [Pers_ID], [U"& _ 
                "AC_LASTUSER], [UAC_ISDEVELOPER], [UAC_PASSWORD_UNENC], [EMP_ID], [HRIS_EMPNO], ["& _ 
                "EMP_ID_TEMP], [IS_CUSTODIAN]) VALUES (@UAC_USERNAME, @UAC_PASSWORD, @UAC_ISACTIV"& _ 
                "E, @UAC_ISLOGGED, @UAC_TYPE, @UAC_HINT, @UAC_RTFLAG, @UAC_RTNUM, @Pers_ID, @UAC_"& _ 
                "LASTUSER, @UAC_ISDEVELOPER, @UAC_PASSWORD_UNENC, @EMP_ID, @HRIS_EMPNO, @EMP_ID_T"& _ 
                "EMP, @IS_CUSTODIAN);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT UAC_USERNAME, UAC_PASSWORD, UAC_ISACTIVE, UAC_ISLOG"& _ 
                "GED, UAC_TYPE, UAC_HINT, UAC_RTFLAG, UAC_RTNUM, Pers_ID, UAC_LASTUSER, UAC_ISDEV"& _ 
                "ELOPER, UAC_PASSWORD_UNENC, EMP_ID, HRIS_EMPNO, EMP_ID_TEMP, IS_CUSTODIAN FROM t"& _ 
                "blV1_USERACCOUNT WHERE (UAC_USERNAME = @UAC_USERNAME)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_PASSWORD", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_ISACTIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISACTIVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_ISLOGGED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISLOGGED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_TYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_HINT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_HINT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_RTFLAG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_RTFLAG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_RTNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_RTNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pers_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_LASTUSER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_LASTUSER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_ISDEVELOPER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISDEVELOPER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_PASSWORD_UNENC", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD_UNENC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMP_ID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMP_ID_TEMP", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_ID_TEMP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IS_CUSTODIAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_CUSTODIAN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblV1_USERACCOUNT] SET [UAC_USERNAME] = @UAC_USERNAME, [UAC_PASSWORD] = @"& _ 
                "UAC_PASSWORD, [UAC_ISACTIVE] = @UAC_ISACTIVE, [UAC_ISLOGGED] = @UAC_ISLOGGED, [U"& _ 
                "AC_TYPE] = @UAC_TYPE, [UAC_HINT] = @UAC_HINT, [UAC_RTFLAG] = @UAC_RTFLAG, [UAC_R"& _ 
                "TNUM] = @UAC_RTNUM, [Pers_ID] = @Pers_ID, [UAC_LASTUSER] = @UAC_LASTUSER, [UAC_I"& _ 
                "SDEVELOPER] = @UAC_ISDEVELOPER, [UAC_PASSWORD_UNENC] = @UAC_PASSWORD_UNENC, [EMP"& _ 
                "_ID] = @EMP_ID, [HRIS_EMPNO] = @HRIS_EMPNO, [EMP_ID_TEMP] = @EMP_ID_TEMP, [IS_CU"& _ 
                "STODIAN] = @IS_CUSTODIAN WHERE (([UAC_USERNAME] = @Original_UAC_USERNAME) AND (["& _ 
                "UAC_PASSWORD] = @Original_UAC_PASSWORD) AND ([UAC_ISACTIVE] = @Original_UAC_ISAC"& _ 
                "TIVE) AND ([UAC_ISLOGGED] = @Original_UAC_ISLOGGED) AND ([UAC_TYPE] = @Original_"& _ 
                "UAC_TYPE) AND ((@IsNull_UAC_HINT = 1 AND [UAC_HINT] IS NULL) OR ([UAC_HINT] = @O"& _ 
                "riginal_UAC_HINT)) AND ([UAC_RTFLAG] = @Original_UAC_RTFLAG) AND ([UAC_RTNUM] = "& _ 
                "@Original_UAC_RTNUM) AND ((@IsNull_Pers_ID = 1 AND [Pers_ID] IS NULL) OR ([Pers_"& _ 
                "ID] = @Original_Pers_ID)) AND ([UAC_LASTUSER] = @Original_UAC_LASTUSER) AND ((@I"& _ 
                "sNull_UAC_ISDEVELOPER = 1 AND [UAC_ISDEVELOPER] IS NULL) OR ([UAC_ISDEVELOPER] ="& _ 
                " @Original_UAC_ISDEVELOPER)) AND ((@IsNull_UAC_PASSWORD_UNENC = 1 AND [UAC_PASSW"& _ 
                "ORD_UNENC] IS NULL) OR ([UAC_PASSWORD_UNENC] = @Original_UAC_PASSWORD_UNENC)) AN"& _ 
                "D ((@IsNull_EMP_ID = 1 AND [EMP_ID] IS NULL) OR ([EMP_ID] = @Original_EMP_ID)) A"& _ 
                "ND ((@IsNull_HRIS_EMPNO = 1 AND [HRIS_EMPNO] IS NULL) OR ([HRIS_EMPNO] = @Origin"& _ 
                "al_HRIS_EMPNO)) AND ((@IsNull_EMP_ID_TEMP = 1 AND [EMP_ID_TEMP] IS NULL) OR ([EM"& _ 
                "P_ID_TEMP] = @Original_EMP_ID_TEMP)) AND ([IS_CUSTODIAN] = @Original_IS_CUSTODIA"& _ 
                "N));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT UAC_USERNAME, UAC_PASSWORD, UAC_ISACTIVE, UAC_ISLOGGED, UAC_TYPE, U"& _ 
                "AC_HINT, UAC_RTFLAG, UAC_RTNUM, Pers_ID, UAC_LASTUSER, UAC_ISDEVELOPER, UAC_PASS"& _ 
                "WORD_UNENC, EMP_ID, HRIS_EMPNO, EMP_ID_TEMP, IS_CUSTODIAN FROM tblV1_USERACCOUNT"& _ 
                " WHERE (UAC_USERNAME = @UAC_USERNAME)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_PASSWORD", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_ISACTIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISACTIVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_ISLOGGED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISLOGGED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_TYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_HINT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_HINT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_RTFLAG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_RTFLAG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_RTNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_RTNUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pers_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_LASTUSER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_LASTUSER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_ISDEVELOPER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISDEVELOPER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_PASSWORD_UNENC", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD_UNENC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMP_ID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMP_ID_TEMP", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_ID_TEMP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IS_CUSTODIAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_CUSTODIAN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_PASSWORD", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_ISACTIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISACTIVE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_ISLOGGED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISLOGGED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_TYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UAC_HINT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_HINT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_HINT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_HINT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_RTFLAG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_RTFLAG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_RTNUM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_RTNUM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Pers_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Pers_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pers_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_LASTUSER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_LASTUSER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UAC_ISDEVELOPER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISDEVELOPER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_ISDEVELOPER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISDEVELOPER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UAC_PASSWORD_UNENC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD_UNENC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_PASSWORD_UNENC", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD_UNENC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMP_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMP_ID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HRIS_EMPNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HRIS_EMPNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HRIS_EMPNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMP_ID_TEMP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_ID_TEMP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMP_ID_TEMP", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_ID_TEMP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IS_CUSTODIAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IS_CUSTODIAN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SRBI.My.MySettings.Default.PRAMASTERDATABASEConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(7) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tblV1_USERACCOUNT.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_USERACCOUNT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.SPV1_SQ_USER_FULLNAME_FML"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        HDIV_DIVISION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            V1VW_USERACCEMPLOYEE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        ("& _ 
                "UAC_USERNAME = @UAC_USERNAME)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        D.HDIVS_CODE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_USERACCOUNT AS U INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       tblV1_HRISEMPDIVISION AS D ON U.HRIS_EMPNO = D.HRIS_EMPNO"& _ 
                " AND U.UAC_USERNAME = @UAC_USERNAME"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT  UAC_PASSWORD FROM tblV1_USERACCOUNT WHERE UAC_PASSWORD=@UAC_PASSWORD"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_PASSWORD", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT  COUNT(*) FROM tblV1_USERACCOUNT WHERE UAC_PASSWORD=@UAC_PASSWORD AND UAC_"& _ 
                "ISACTIVE=1"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_PASSWORD", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_PASSWORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT        EMP_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_USERACCOUNT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (UAC_USERNA"& _ 
                "ME =@UAC_USERNAME)"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "UPDATE [tblV1_USERACCOUNT] SET  [UAC_ISLOGGED] = @UAC_ISLOGGED WHERE [UAC_USERNAM"& _ 
                "E] = @UAC_USERNAME"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_ISLOGGED", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_ISLOGGED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_TABLES.tblV1_USERACCOUNTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_TABLES.tblV1_USERACCOUNTDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_TABLES) As Integer
            Return Me.Adapter.Update(dataSet, "tblV1_USERACCOUNT")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_UAC_USERNAME As String,  _
                    ByVal Original_UAC_PASSWORD As String,  _
                    ByVal Original_UAC_ISACTIVE As Boolean,  _
                    ByVal Original_UAC_ISLOGGED As Boolean,  _
                    ByVal Original_UAC_TYPE As Integer,  _
                    ByVal Original_UAC_HINT As String,  _
                    ByVal Original_UAC_RTFLAG As Boolean,  _
                    ByVal Original_UAC_RTNUM As Integer,  _
                    ByVal Original_Pers_ID As String,  _
                    ByVal Original_UAC_LASTUSER As String,  _
                    ByVal Original_UAC_ISDEVELOPER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_UAC_PASSWORD_UNENC As String,  _
                    ByVal Original_EMP_ID As String,  _
                    ByVal Original_HRIS_EMPNO As String,  _
                    ByVal Original_EMP_ID_TEMP As String,  _
                    ByVal Original_IS_CUSTODIAN As Integer) As Integer
            If (Original_UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UAC_USERNAME")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_UAC_USERNAME,String)
            End If
            If (Original_UAC_PASSWORD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UAC_PASSWORD")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_UAC_PASSWORD,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_UAC_ISACTIVE,Boolean)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_UAC_ISLOGGED,Boolean)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_UAC_TYPE,Integer)
            If (Original_UAC_HINT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_UAC_HINT,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_UAC_RTFLAG,Boolean)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_UAC_RTNUM,Integer)
            If (Original_Pers_ID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Pers_ID,String)
            End If
            If (Original_UAC_LASTUSER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UAC_LASTUSER")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_UAC_LASTUSER,String)
            End If
            If (Original_UAC_ISDEVELOPER.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_UAC_ISDEVELOPER.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_UAC_PASSWORD_UNENC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_UAC_PASSWORD_UNENC,String)
            End If
            If (Original_EMP_ID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_EMP_ID,String)
            End If
            If (Original_HRIS_EMPNO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_HRIS_EMPNO,String)
            End If
            If (Original_EMP_ID_TEMP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_EMP_ID_TEMP,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_IS_CUSTODIAN,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal UAC_USERNAME As String,  _
                    ByVal UAC_PASSWORD As String,  _
                    ByVal UAC_ISACTIVE As Boolean,  _
                    ByVal UAC_ISLOGGED As Boolean,  _
                    ByVal UAC_TYPE As Integer,  _
                    ByVal UAC_HINT As String,  _
                    ByVal UAC_RTFLAG As Boolean,  _
                    ByVal UAC_RTNUM As Integer,  _
                    ByVal Pers_ID As String,  _
                    ByVal UAC_LASTUSER As String,  _
                    ByVal UAC_ISDEVELOPER As Global.System.Nullable(Of Boolean),  _
                    ByVal UAC_PASSWORD_UNENC As String,  _
                    ByVal EMP_ID As String,  _
                    ByVal HRIS_EMPNO As String,  _
                    ByVal EMP_ID_TEMP As String,  _
                    ByVal IS_CUSTODIAN As Integer) As Integer
            If (UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_USERNAME")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(UAC_USERNAME,String)
            End If
            If (UAC_PASSWORD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_PASSWORD")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(UAC_PASSWORD,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(UAC_ISACTIVE,Boolean)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(UAC_ISLOGGED,Boolean)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(UAC_TYPE,Integer)
            If (UAC_HINT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(UAC_HINT,String)
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(UAC_RTFLAG,Boolean)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(UAC_RTNUM,Integer)
            If (Pers_ID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Pers_ID,String)
            End If
            If (UAC_LASTUSER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_LASTUSER")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(UAC_LASTUSER,String)
            End If
            If (UAC_ISDEVELOPER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(UAC_ISDEVELOPER.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (UAC_PASSWORD_UNENC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(UAC_PASSWORD_UNENC,String)
            End If
            If (EMP_ID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(EMP_ID,String)
            End If
            If (HRIS_EMPNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(HRIS_EMPNO,String)
            End If
            If (EMP_ID_TEMP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(EMP_ID_TEMP,String)
            End If
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(IS_CUSTODIAN,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal UAC_USERNAME As String,  _
                    ByVal UAC_PASSWORD As String,  _
                    ByVal UAC_ISACTIVE As Boolean,  _
                    ByVal UAC_ISLOGGED As Boolean,  _
                    ByVal UAC_TYPE As Integer,  _
                    ByVal UAC_HINT As String,  _
                    ByVal UAC_RTFLAG As Boolean,  _
                    ByVal UAC_RTNUM As Integer,  _
                    ByVal Pers_ID As String,  _
                    ByVal UAC_LASTUSER As String,  _
                    ByVal UAC_ISDEVELOPER As Global.System.Nullable(Of Boolean),  _
                    ByVal UAC_PASSWORD_UNENC As String,  _
                    ByVal EMP_ID As String,  _
                    ByVal HRIS_EMPNO As String,  _
                    ByVal EMP_ID_TEMP As String,  _
                    ByVal IS_CUSTODIAN As Integer,  _
                    ByVal Original_UAC_USERNAME As String,  _
                    ByVal Original_UAC_PASSWORD As String,  _
                    ByVal Original_UAC_ISACTIVE As Boolean,  _
                    ByVal Original_UAC_ISLOGGED As Boolean,  _
                    ByVal Original_UAC_TYPE As Integer,  _
                    ByVal Original_UAC_HINT As String,  _
                    ByVal Original_UAC_RTFLAG As Boolean,  _
                    ByVal Original_UAC_RTNUM As Integer,  _
                    ByVal Original_Pers_ID As String,  _
                    ByVal Original_UAC_LASTUSER As String,  _
                    ByVal Original_UAC_ISDEVELOPER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_UAC_PASSWORD_UNENC As String,  _
                    ByVal Original_EMP_ID As String,  _
                    ByVal Original_HRIS_EMPNO As String,  _
                    ByVal Original_EMP_ID_TEMP As String,  _
                    ByVal Original_IS_CUSTODIAN As Integer) As Integer
            If (UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_USERNAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(UAC_USERNAME,String)
            End If
            If (UAC_PASSWORD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_PASSWORD")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(UAC_PASSWORD,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(UAC_ISACTIVE,Boolean)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(UAC_ISLOGGED,Boolean)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(UAC_TYPE,Integer)
            If (UAC_HINT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(UAC_HINT,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(UAC_RTFLAG,Boolean)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(UAC_RTNUM,Integer)
            If (Pers_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Pers_ID,String)
            End If
            If (UAC_LASTUSER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_LASTUSER")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(UAC_LASTUSER,String)
            End If
            If (UAC_ISDEVELOPER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(UAC_ISDEVELOPER.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (UAC_PASSWORD_UNENC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(UAC_PASSWORD_UNENC,String)
            End If
            If (EMP_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(EMP_ID,String)
            End If
            If (HRIS_EMPNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(HRIS_EMPNO,String)
            End If
            If (EMP_ID_TEMP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(EMP_ID_TEMP,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(IS_CUSTODIAN,Integer)
            If (Original_UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UAC_USERNAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_UAC_USERNAME,String)
            End If
            If (Original_UAC_PASSWORD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UAC_PASSWORD")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_UAC_PASSWORD,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_UAC_ISACTIVE,Boolean)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_UAC_ISLOGGED,Boolean)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_UAC_TYPE,Integer)
            If (Original_UAC_HINT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_UAC_HINT,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_UAC_RTFLAG,Boolean)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_UAC_RTNUM,Integer)
            If (Original_Pers_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_Pers_ID,String)
            End If
            If (Original_UAC_LASTUSER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UAC_LASTUSER")
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_UAC_LASTUSER,String)
            End If
            If (Original_UAC_ISDEVELOPER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_UAC_ISDEVELOPER.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_UAC_PASSWORD_UNENC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_UAC_PASSWORD_UNENC,String)
            End If
            If (Original_EMP_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_EMP_ID,String)
            End If
            If (Original_HRIS_EMPNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_HRIS_EMPNO,String)
            End If
            If (Original_EMP_ID_TEMP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_EMP_ID_TEMP,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_IS_CUSTODIAN,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal UAC_PASSWORD As String,  _
                    ByVal UAC_ISACTIVE As Boolean,  _
                    ByVal UAC_ISLOGGED As Boolean,  _
                    ByVal UAC_TYPE As Integer,  _
                    ByVal UAC_HINT As String,  _
                    ByVal UAC_RTFLAG As Boolean,  _
                    ByVal UAC_RTNUM As Integer,  _
                    ByVal Pers_ID As String,  _
                    ByVal UAC_LASTUSER As String,  _
                    ByVal UAC_ISDEVELOPER As Global.System.Nullable(Of Boolean),  _
                    ByVal UAC_PASSWORD_UNENC As String,  _
                    ByVal EMP_ID As String,  _
                    ByVal HRIS_EMPNO As String,  _
                    ByVal EMP_ID_TEMP As String,  _
                    ByVal IS_CUSTODIAN As Integer,  _
                    ByVal Original_UAC_USERNAME As String,  _
                    ByVal Original_UAC_PASSWORD As String,  _
                    ByVal Original_UAC_ISACTIVE As Boolean,  _
                    ByVal Original_UAC_ISLOGGED As Boolean,  _
                    ByVal Original_UAC_TYPE As Integer,  _
                    ByVal Original_UAC_HINT As String,  _
                    ByVal Original_UAC_RTFLAG As Boolean,  _
                    ByVal Original_UAC_RTNUM As Integer,  _
                    ByVal Original_Pers_ID As String,  _
                    ByVal Original_UAC_LASTUSER As String,  _
                    ByVal Original_UAC_ISDEVELOPER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_UAC_PASSWORD_UNENC As String,  _
                    ByVal Original_EMP_ID As String,  _
                    ByVal Original_HRIS_EMPNO As String,  _
                    ByVal Original_EMP_ID_TEMP As String,  _
                    ByVal Original_IS_CUSTODIAN As Integer) As Integer
            Return Me.Update(Original_UAC_USERNAME, UAC_PASSWORD, UAC_ISACTIVE, UAC_ISLOGGED, UAC_TYPE, UAC_HINT, UAC_RTFLAG, UAC_RTNUM, Pers_ID, UAC_LASTUSER, UAC_ISDEVELOPER, UAC_PASSWORD_UNENC, EMP_ID, HRIS_EMPNO, EMP_ID_TEMP, IS_CUSTODIAN, Original_UAC_USERNAME, Original_UAC_PASSWORD, Original_UAC_ISACTIVE, Original_UAC_ISLOGGED, Original_UAC_TYPE, Original_UAC_HINT, Original_UAC_RTFLAG, Original_UAC_RTNUM, Original_Pers_ID, Original_UAC_LASTUSER, Original_UAC_ISDEVELOPER, Original_UAC_PASSWORD_UNENC, Original_EMP_ID, Original_HRIS_EMPNO, Original_EMP_ID_TEMP, Original_IS_CUSTODIAN)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SPV1_SQ_USER_FULLNAME_FML(ByVal UAC_USERNAME As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (UAC_USERNAME Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(UAC_USERNAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SQ_DIVISION_DESC(ByVal UAC_USERNAME As String) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_USERNAME")
            Else
                command.Parameters(0).Value = CType(UAC_USERNAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SQ_DIVS_CODE(ByVal UAC_USERNAME As String) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_USERNAME")
            Else
                command.Parameters(0).Value = CType(UAC_USERNAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SQ_GETUACPASSWORD(ByVal UAC_PASSWORD As String) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            If (UAC_PASSWORD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_PASSWORD")
            Else
                command.Parameters(0).Value = CType(UAC_PASSWORD,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SQ_IFUSERISACTIVE(ByVal UAC_PASSWORD As String) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(5)
            If (UAC_PASSWORD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_PASSWORD")
            Else
                command.Parameters(0).Value = CType(UAC_PASSWORD,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function SQ_UHRIS_EMPNO(ByVal UAC_USERNAME As String) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(6)
            If (UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_USERNAME")
            Else
                command.Parameters(0).Value = CType(UAC_USERNAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UQ_USERLOGSTATUS(ByVal UAC_ISLOGGED As Boolean, ByVal UAC_USERNAME As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(7)
            command.Parameters(0).Value = CType(UAC_ISLOGGED,Boolean)
            If (UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_USERNAME")
            Else
                command.Parameters(1).Value = CType(UAC_USERNAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblV1_USERACCOUNTLOGSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblV1_USERACCOUNTLOGS"
            tableMapping.ColumnMappings.Add("UALG_DATETIMELOGGED", "UALG_DATETIMELOGGED")
            tableMapping.ColumnMappings.Add("UAC_USERNAME", "UAC_USERNAME")
            tableMapping.ColumnMappings.Add("UALG_PCNAME", "UALG_PCNAME")
            tableMapping.ColumnMappings.Add("UALG_TYPE", "UALG_TYPE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblV1_USERACCOUNTLOGS] WHERE (([UALG_DATETIMELOGGED] = @Original_UAL"& _ 
                "G_DATETIMELOGGED) AND ([UAC_USERNAME] = @Original_UAC_USERNAME) AND ([UALG_PCNAM"& _ 
                "E] = @Original_UALG_PCNAME) AND ([UALG_TYPE] = @Original_UALG_TYPE))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UALG_DATETIMELOGGED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_DATETIMELOGGED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UALG_PCNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_PCNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UALG_TYPE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblV1_USERACCOUNTLOGS] ([UALG_DATETIMELOGGED], [UAC_USERNAME], [UALG"& _ 
                "_PCNAME], [UALG_TYPE]) VALUES (@UALG_DATETIMELOGGED, @UAC_USERNAME, @UALG_PCNAME"& _ 
                ", @UALG_TYPE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT UALG_DATETIMELOGGED, UAC_USERNAME, UALG_PCNAME, UALG_TYPE"& _ 
                " FROM tblV1_USERACCOUNTLOGS WHERE (UALG_DATETIMELOGGED = @UALG_DATETIMELOGGED)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UALG_DATETIMELOGGED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_DATETIMELOGGED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UALG_PCNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_PCNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UALG_TYPE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblV1_USERACCOUNTLOGS] SET [UALG_DATETIMELOGGED] = @UALG_DATETIMELOGGED, "& _ 
                "[UAC_USERNAME] = @UAC_USERNAME, [UALG_PCNAME] = @UALG_PCNAME, [UALG_TYPE] = @UAL"& _ 
                "G_TYPE WHERE (([UALG_DATETIMELOGGED] = @Original_UALG_DATETIMELOGGED) AND ([UAC_"& _ 
                "USERNAME] = @Original_UAC_USERNAME) AND ([UALG_PCNAME] = @Original_UALG_PCNAME) "& _ 
                "AND ([UALG_TYPE] = @Original_UALG_TYPE));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT UALG_DATETIMELOGGED, UAC_USERN"& _ 
                "AME, UALG_PCNAME, UALG_TYPE FROM tblV1_USERACCOUNTLOGS WHERE (UALG_DATETIMELOGGE"& _ 
                "D = @UALG_DATETIMELOGGED)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UALG_DATETIMELOGGED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_DATETIMELOGGED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UALG_PCNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_PCNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UALG_TYPE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UALG_DATETIMELOGGED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_DATETIMELOGGED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UALG_PCNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_PCNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UALG_TYPE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SRBI.My.MySettings.Default.PRAMASTERDATABASEConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tblV1_USERACCOUNTLOGS.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblV1_USERACCOUNTLOGS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "INSERT INTO [tblV1_USERACCOUNTLOGS] ([UALG_DATETIMELOGGED], [UAC_USERNAME], [UALG"& _ 
                "_PCNAME], [UALG_TYPE]) VALUES (GETDATE(), @UAC_USERNAME, @UALG_PCNAME, @UALG_TYP"& _ 
                "E);"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UAC_USERNAME", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "UAC_USERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UALG_PCNAME", Global.System.Data.SqlDbType.VarChar, 500, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_PCNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UALG_TYPE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "UALG_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_TABLES.tblV1_USERACCOUNTLOGSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_TABLES.tblV1_USERACCOUNTLOGSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_TABLES) As Integer
            Return Me.Adapter.Update(dataSet, "tblV1_USERACCOUNTLOGS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_UALG_DATETIMELOGGED As Date, ByVal Original_UAC_USERNAME As String, ByVal Original_UALG_PCNAME As String, ByVal Original_UALG_TYPE As Boolean) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_UALG_DATETIMELOGGED,Date)
            If (Original_UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UAC_USERNAME")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_UAC_USERNAME,String)
            End If
            If (Original_UALG_PCNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UALG_PCNAME")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_UALG_PCNAME,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_UALG_TYPE,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal UALG_DATETIMELOGGED As Date, ByVal UAC_USERNAME As String, ByVal UALG_PCNAME As String, ByVal UALG_TYPE As Boolean) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(UALG_DATETIMELOGGED,Date)
            If (UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_USERNAME")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(UAC_USERNAME,String)
            End If
            If (UALG_PCNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UALG_PCNAME")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(UALG_PCNAME,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(UALG_TYPE,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal UALG_DATETIMELOGGED As Date, ByVal UAC_USERNAME As String, ByVal UALG_PCNAME As String, ByVal UALG_TYPE As Boolean, ByVal Original_UALG_DATETIMELOGGED As Date, ByVal Original_UAC_USERNAME As String, ByVal Original_UALG_PCNAME As String, ByVal Original_UALG_TYPE As Boolean) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(UALG_DATETIMELOGGED,Date)
            If (UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_USERNAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(UAC_USERNAME,String)
            End If
            If (UALG_PCNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UALG_PCNAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(UALG_PCNAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(UALG_TYPE,Boolean)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_UALG_DATETIMELOGGED,Date)
            If (Original_UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UAC_USERNAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_UAC_USERNAME,String)
            End If
            If (Original_UALG_PCNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UALG_PCNAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_UALG_PCNAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_UALG_TYPE,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal UAC_USERNAME As String, ByVal UALG_PCNAME As String, ByVal UALG_TYPE As Boolean, ByVal Original_UALG_DATETIMELOGGED As Date, ByVal Original_UAC_USERNAME As String, ByVal Original_UALG_PCNAME As String, ByVal Original_UALG_TYPE As Boolean) As Integer
            Return Me.Update(Original_UALG_DATETIMELOGGED, UAC_USERNAME, UALG_PCNAME, UALG_TYPE, Original_UALG_DATETIMELOGGED, Original_UAC_USERNAME, Original_UALG_PCNAME, Original_UALG_TYPE)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function IQ_USERACCOUNTLOGS(ByVal UAC_USERNAME As String, ByVal UALG_PCNAME As String, ByVal UALG_TYPE As Boolean) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (UAC_USERNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UAC_USERNAME")
            Else
                command.Parameters(0).Value = CType(UAC_USERNAME,String)
            End If
            If (UALG_PCNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UALG_PCNAME")
            Else
                command.Parameters(1).Value = CType(UALG_PCNAME,String)
            End If
            command.Parameters(2).Value = CType(UALG_TYPE,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _tblV1_USERACCOUNTTableAdapter As tblV1_USERACCOUNTTableAdapter
        
        Private _tblV1_USERACCOUNTLOGSTableAdapter As tblV1_USERACCOUNTLOGSTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblV1_USERACCOUNTTableAdapter() As tblV1_USERACCOUNTTableAdapter
            Get
                Return Me._tblV1_USERACCOUNTTableAdapter
            End Get
            Set
                Me._tblV1_USERACCOUNTTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblV1_USERACCOUNTLOGSTableAdapter() As tblV1_USERACCOUNTLOGSTableAdapter
            Get
                Return Me._tblV1_USERACCOUNTLOGSTableAdapter
            End Get
            Set
                Me._tblV1_USERACCOUNTLOGSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._tblV1_USERACCOUNTTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblV1_USERACCOUNTTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblV1_USERACCOUNTTableAdapter.Connection
                End If
                If ((Not (Me._tblV1_USERACCOUNTLOGSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblV1_USERACCOUNTLOGSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblV1_USERACCOUNTLOGSTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._tblV1_USERACCOUNTTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblV1_USERACCOUNTLOGSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DS_TABLES, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblV1_USERACCOUNTTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblV1_USERACCOUNT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblV1_USERACCOUNTTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblV1_USERACCOUNTLOGSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblV1_USERACCOUNTLOGS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblV1_USERACCOUNTLOGSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DS_TABLES, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblV1_USERACCOUNTTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblV1_USERACCOUNT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblV1_USERACCOUNTTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblV1_USERACCOUNTLOGSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblV1_USERACCOUNTLOGS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblV1_USERACCOUNTLOGSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DS_TABLES, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblV1_USERACCOUNTLOGSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblV1_USERACCOUNTLOGS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblV1_USERACCOUNTLOGSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblV1_USERACCOUNTTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblV1_USERACCOUNT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblV1_USERACCOUNTTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DS_TABLES) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._tblV1_USERACCOUNTTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblV1_USERACCOUNTTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblV1_USERACCOUNTLOGSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblV1_USERACCOUNTLOGSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._tblV1_USERACCOUNTTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblV1_USERACCOUNTTableAdapter, Me._tblV1_USERACCOUNTTableAdapter.Connection)
                    Me._tblV1_USERACCOUNTTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_USERACCOUNTTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblV1_USERACCOUNTTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblV1_USERACCOUNTTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblV1_USERACCOUNTTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblV1_USERACCOUNTLOGSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblV1_USERACCOUNTLOGSTableAdapter, Me._tblV1_USERACCOUNTLOGSTableAdapter.Connection)
                    Me._tblV1_USERACCOUNTLOGSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_USERACCOUNTLOGSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblV1_USERACCOUNTLOGSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblV1_USERACCOUNTLOGSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblV1_USERACCOUNTLOGSTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._tblV1_USERACCOUNTTableAdapter) Is Nothing) Then
                    Me._tblV1_USERACCOUNTTableAdapter.Connection = CType(revertConnections(Me._tblV1_USERACCOUNTTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_USERACCOUNTTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblV1_USERACCOUNTLOGSTableAdapter) Is Nothing) Then
                    Me._tblV1_USERACCOUNTLOGSTableAdapter.Connection = CType(revertConnections(Me._tblV1_USERACCOUNTLOGSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblV1_USERACCOUNTLOGSTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
